{"version":3,"sources":["config.js","GoogleMapContainer.js","BrewerDetail.js","brewerhook.js","BrewerCard.js","about.js","Home.js","Route.js","App.js","reportWebVitals.js","index.js"],"names":["MapContainer","props","console","log","locations","name","location","lat","parseFloat","lng","defaultCenter","googleMapsApiKey","config","googleMapApiKey","mapContainerStyle","height","width","zoom","center","map","item","position","container","display","flexWrap","margin","flexDirection","justifyContent","card","marginTop","notAvailableContainer","btn","color","BrewerDetail","React","state","street","style","Card","CardContent","Typography","variant","gutterBottom","sx","fontSize","component","obdb_id","brewery_type","website_url","phone","city","country","latitude","longitude","Button","to","useBreweries","useState","isLoading","setIsLoading","setCity","data","setData","useEffect","axios","get","brewerOfficialApi","headers","then","d","cardSize","BrewerCard","brewer","type","BrewerDetailComponentLink","ref","pathname","postal_code","href","CardActions","ButtonBase","onClick","getDetails","mb","About","divContainer","textInput","Home","previousCity","localStorage","getItem","userBreweries","breweries","onChange","setType","Container","TextField","size","id","label","placeholder","event","target","value","setItem","getData","index","ButtonAppBar","selectedIndex","setSelectedIndex","HomeComponentLink","AboutComponentLink","linksArray","Box","AppBar","Toolbar","List","padding","ListItem","button","handleListItemClick","selected","ListItemText","exact","from","path","HomeComponent","AboutComponent","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57f296c3.chunk.js","sourcesContent":["const config = {\n    \"webapiurl\" : \"https://localhost:5001/brewers\", \n    \"brewerOfficialApi\": \"https://api.openbrewerydb.org/breweries\",\n    \"googleMapApiKey\": \"AIzaSyAF4X6_PtpYck5HNvwQ1G1YcCMQiWYhgwQ\"\n}\n\nexport default {\n    config\n}","import React, { useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport config from './config';\n\n\nconst MapContainer = (props) => {\n  console.log(props);\n  const mapStyles = {        \n    height: \"50vh\",\n    width: \"100%\"\n  };\n\n  const locations = [\n    {\n      name: props.name,\n      location: { \n        lat: parseFloat(props.lat),\n        lng: parseFloat(props.lng)\n      },\n    }\n  ];\n\n  const defaultCenter = {\n    lat: parseFloat(props.lat), lng: parseFloat(props.lng)\n  }\n  \n  return (\n   \n     <LoadScript\n       googleMapsApiKey={config.config.googleMapApiKey}>\n        <GoogleMap\n          mapContainerStyle={mapStyles}\n          zoom={15}\n          center={defaultCenter}\n        />\n        {/* marker is not working on developer mode APi */}\n        {\n            locations.map(item => {\n              return (\n                <Marker key={item.name} position={item.location}/>\n              )\n            })\n         }\n     </LoadScript>\n   \n  )\n}\n\nexport default MapContainer;","import * as React from 'react';\nimport MapContainer from './GoogleMapContainer';\nimport {\n    Card,\n    CardContent,\n    Typography,\n    ButtonBase,\n    Button\n} from '@mui/material';\n\nimport {\n    Link\n} from 'react-router-dom';\n\nconst container = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%',\n    margin: '10px',\n    flexDirection: 'row',\n    justifyContent: 'center'\n}\n\nconst card = {\n    width: \"80%\",\n    marginTop: \"10px\"\n}\n\nconst notAvailableContainer = {\n    margin: '10px',\n    height: \"40px\"\n}\n\nconst btn = {\n    color: 'white'\n}\n\nconst BrewerDetail = (props) => {\n    // somehow react 17 is not compatible with react router dom, so I have to use localstorage to pass the data intead of setting everything up for\n    React.useEffect(() => {\n        console.log(props.location.state.street);\n    }, []);\n\n    const HomeComponentLink = React.forwardRef((props, ref) => <Link to=\"/home\" {...props} ref={ref} />); \n\n    return (\n        <section style={container}>\n            <Card style={card}>\n                <CardContent>\n                    <Typography variant=\"h5\" color=\"text.secondary\" gutterBottom>\n                        {props.location.state.name}\n                    </Typography>\n                    <Typography sx={{ fontSize: 14 }} component=\"div\">\n                        ODBD ID: {props.location.state.obdb_id}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                        Type: {props.location.state.brewery_type}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                        Website: {\n                            (props.location.state.website_url==null) ? \"No url is available\" : props.location.state.website_url\n                        }\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                        PHone: {props.location.state.phone==null ? \"No phone number is available\" : props.location.state.phone}\n                    </Typography>\n                </CardContent>\n            </Card>\n            <Card style={card}>\n                <CardContent>\n                    <Typography variant=\"h5\" color=\"text.secondary\" gutterBottom>\n                        Address\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                        {\n                            (props.location.state.street ==null) ? \n                            \"No street is available\" : \n                            `Street: ${props.location.state.street}`\n                        }\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                        City: {props.location.state.city}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                        Country: {props.location.state.country}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                        State: {props.location.state.state}\n                    </Typography>\n                </CardContent>\n            </Card>\n            <Card style={card}>\n                {\n                    (props.location.state.latitude === null || props.location.state.longitude === null) ?\n                    <section style={notAvailableContainer}>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                            No location information is available, display default location\n                        </Typography>\n                    </section>\n                    :\n                    <MapContainer\n                        name={props.location.state.name}\n                        lat={props.location.state.latitude}\n                        lng={props.location.state.longitude}\n                    />\n                }\n            </Card>\n            <div style={card}>\n                <Button variant=\"contained\" style={btn}>\n                    <Link to=\"/home\">Back</Link>\n                </Button>\n            </div>\n            \n        </section>\n       \n    )\n}\n\nexport default BrewerDetail;","import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport config from './config';\n\nconst useBreweries = (props) => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [city, setCity] = useState(props);\n    const [data, setData] = useState([]);\n\n    const onChange = (city) => {\n        setCity(city);\n    };\n\n    useEffect(() => {\n        let axiosConfig = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': \"*\"\n            }\n        };\n\n        if(city !== '' && typeof city !== 'undefined') {\n            // use config.config.webapiurl will be using the .net 5 webapi to fetch data if the webapi is running\n            axios.get(`${config.config.brewerOfficialApi}?by_city=${city}`, axiosConfig).then(d => {\n                setData(d.data);\n            });\n\n            // this is the dotnet version of webapi, need to run the brewerApi, then uncomment this, and comment the call from above\n            // axios.get(`${config.config.webapiurl}?city=${city}`, axiosConfig).then(d => {\n            //     setData(d.data);\n            //     console.log(d.data);\n            // });\n            setIsLoading(false);\n        }\n\n    }, [city, props]);\n\n    return [isLoading, data, onChange];\n}\n\nexport default useBreweries;","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport {\n    Button,\n    ButtonBase\n} from '@mui/material';\nimport {\n    Link\n} from \"react-router-dom\";\n\nconst cardSize = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '30%',\n    margin: '10px',\n    flexDirection: 'column'\n}\n\nconst BrewerCard = (props) => {\n    const [type, setType] = React.useState(props.brewer.brewery_type);\n    const [data, setData] = React.useState(props.brewer);\n    const BrewerDetailComponentLink = React.forwardRef((props, ref) => <Link to={{pathname: `/home/${type}`, state: data }} {...props} ref={ref} />);\n\n    const getDetails = () => {\n        setData(props.brewer);\n        props.getDetails(type);\n    }\n\n    React.useEffect(() => {\n       setData(props.brewer);\n    }, [props]);\n\n    return (\n        <Card style={cardSize}>\n            <CardContent>\n                <Typography variant=\"h5\" color=\"text.secondary\" gutterBottom>\n                    {props.brewer.name}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                    Type: {props.brewer.brewery_type}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                    Address: {props.brewer.street} {props.brewer.state} {props.brewer.postal_code}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                    {\n                        props.brewer.website_url == null ? \"No Website Is Available\" :\n                        <a href={props.brewer.website_url}>Visit The Site</a>\n                    }\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <ButtonBase component={BrewerDetailComponentLink} onClick={getDetails}>\n                    <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                        See Details\n                    </Typography>\n                </ButtonBase>\n            </CardActions>\n        </Card>\n    );\n}\n\nexport default BrewerCard;","import React, { Fragment, useState } from 'react';\nimport userBreweries from './brewerhook';\nimport BrewerCard from './BrewerCard';\nimport {\n    Typography\n} from '@mui/material';\n\nconst cardSize = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flexDirection: 'row',\n    justifyContent: 'center'\n}\n\nconst About = () => {\n    return(\n        <section style={cardSize}>\n            <Typography variant=\"h5\" color=\"text.secondary\">\n                React coding assessment\n            </Typography>\n        </section>\n    );\n}\n\nexport default About;","import React, { useState } from 'react';\nimport userBreweries from './brewerhook';\nimport BrewerCard from './BrewerCard';\nimport {\n    Button,\n    Container,\n    TextField\n} from '@mui/material';\n\nconst cardSize = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flexDirection: 'row',\n    justifyContent: 'center',\n}\n\nconst divContainer = {\n    display: 'flex',\n    justifyContent: 'center',\n    margin: '10px',\n    flexDirection: 'row'\n\n}\n\nconst textInput = {\n    width: \"50%\",\n    'marginTop': '20px'\n}\n\nconst btn = {\n    'marginTop': '20px',\n    'marginLeft': '20px'\n}\n\nconst Home = () => {\n    const previousCity = localStorage.getItem('city');\n    const [isLoading, breweries, onChange] = userBreweries(previousCity);\n    const [type, setType] = useState('');\n    const [city, setCity] = useState('');\n    const getDetails = (data) => {\n        setType(data);\n    }\n\n    const getData = (city) => {\n        localStorage.setItem('city', city);\n        onChange(city);\n    }\n\n    const handleChange = (event) => {\n        setCity(event.target.value);\n    }\n\n    const displayItem = () => {\n        {\n            return (\n                breweries.map((d, index) => {\n                    return (\n                        <BrewerCard\n                            key={index}\n                            brewer={d}\n                            getDetails={getDetails}\n                        />\n                    )\n                })\n            );\n        }\n    }\n\n    return(\n        <section>\n            <Container style={divContainer}>\n                <TextField\n                    style={textInput}\n                    size=\"small\"\n                    id=\"outlined-name\"\n                    label=\"Name\"\n                    placeholder=\"Enter a state\"\n                    onChange={handleChange}\n                    />\n                <Button style={btn} variant=\"contained\" onClick={() => getData(city)}>GetData</Button>\n            </Container>\n            \n            <div style={cardSize}>\n                { displayItem() }\n            </div>\n            \n        </section>\n    );\n}\n\nexport default Home;","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport BrewerDetail from './BrewerDetail';\nimport AboutComponent from './about';\nimport {\n    ButtonBase,\n    Card\n} from '@mui/material';\n\nimport {\n    Home,\n    Description\n } from '@mui/icons-material';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    Redirect\n  } from \"react-router-dom\";\n\nimport HomeComponent from './Home';\n\nexport default function ButtonAppBar() {\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n\n  const flexContainer = {\n    display: 'flex',\n    flexDirection: 'row',\n    padding: 0\n  };\n\n  const centered = {\n    'height': '100vh', /* Magic here */\n    'display': 'flex',\n    'justifyContent': 'center'\n  };\n\n\n  const HomeComponentLink = React.forwardRef((props, ref) => <Link to=\"/home\" {...props} ref={ref} />); \n  const AboutComponentLink = React.forwardRef((props, ref) => <Link to=\"/about\" {...props} ref={ref} />); \n\n  var linksArray = [];\n  linksArray[0] = HomeComponentLink;\n  linksArray[1] = AboutComponentLink;\n  return (\n    <Router style={centered} >\n        <Box>\n            <AppBar position=\"static\">\n                <Toolbar>\n                <List style={flexContainer}>\n                    {\n                      [\"Home\", \"About\"].map((d, index) => (\n                        <ListItem button key={index} onClick={(event) => handleListItemClick(event, index)} selected={selectedIndex[index]}>\n                          <ButtonBase component={linksArray[index]}>\n                            <ListItemText>{d}</ListItemText>\n                          </ButtonBase>\n                        </ListItem>\n                      ))\n                    }\n                </List>\n                </Toolbar>\n            </AppBar>\n        </Box>\n        <Switch>\n            <Redirect exact from=\"/\" to=\"/home\" />\n            <Route exact path=\"/home\" component={HomeComponent} />\n            <Route exact path=\"/about\" component={AboutComponent} />\n            <Route path={`/home/:type`} component={BrewerDetail}>\n            </Route>\n        </Switch>\n    </Router>\n  );\n}\n","import * as React from 'react';\n\nimport Router from './Route';\nimport {\n Container\n} from '@mui/material';\nexport default function App() {\n  return (\n    <main>\n      <Router />\n    </main>\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}